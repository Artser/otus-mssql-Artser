/*
Домашнее задание по курсу MS SQL Server Developer в OTUS.

Занятие "03 - Подзапросы, CTE, временные таблицы".

Задания выполняются с использованием базы данных WideWorldImporters.

Бэкап БД можно скачать отсюда:
https://github.com/Microsoft/sql-server-samples/releases/tag/wide-world-importers-v1.0
Нужен WideWorldImporters-Full.bak

Описание WideWorldImporters от Microsoft:
* https://docs.microsoft.com/ru-ru/sql/samples/wide-world-importers-what-is
* https://docs.microsoft.com/ru-ru/sql/samples/wide-world-importers-oltp-database-catalog
*/

-- ---------------------------------------------------------------------------
-- Задание - написать выборки для получения указанных ниже данных.
-- Для всех заданий, где возможно, сделайте два варианта запросов:
--  1) через вложенный запрос
--  2) через WITH (для производных таблиц)
-- ---------------------------------------------------------------------------

USE WideWorldImporters

/*
1. Выберите сотрудников (Application.People), которые являются продажниками (IsSalesPerson), 
и не сделали ни одной продажи 04 июля 2015 года. 
Вывести ИД сотрудника и его полное имя. 
Продажи смотреть в таблице Sales.Invoices.
*/

SELECT PersonID, FullName
FROM Application.People
WHERE IsSalesPerson =1 AND
PersonID NOT IN (
SELECT DISTINCT SalespersonPersonID
FROM Sales.Invoices
WHERE InvoiceDate = '2015-07-04'
)


;WITH InvoicesCTE AS (
SELECT DISTINCT SalespersonPersonID
FROM Sales.Invoices
WHERE InvoiceDate = '2015-07-04'
)


SELECT PersonID, FullName, SalespersonPersonID
FROM Application.People p
LEFT JOIN InvoicesCTE on InvoicesCTE.SalespersonPersonID = p.PersonID
WHERE IsSalesperson = 1 AND SalespersonPersonID IS NULL



/*
2. Выберите товары с минимальной ценой (подзапросом). Сделайте два варианта подзапроса. 
Вывести: ИД товара, наименование товара, цена.
*/

TODO: 
SELECT StockItemID,StockItemName,UnitPrice
FROM [Warehouse].[StockItems]
WHERE UnitPrice = (SELECT MIN(UnitPrice) FROM [Warehouse].[StockItems])

;WITH minPriceCTE AS(
SELECT MIN(UnitPrice) AS UnitPrice FROM [Warehouse].[StockItems])
SELECT ws.StockItemID,ws.StockItemName, ws.UnitPrice
FROM [Warehouse].[StockItems] ws
join minPriceCTE on minPriceCTE.UnitPrice = ws.UnitPrice

/*
3. Выберите информацию по клиентам, которые перевели компании пять максимальных платежей 
из Sales.CustomerTransactions. 
Представьте несколько способов (в том числе с CTE). 
*/

TODO: 
SELECT s.CustomerID, s.CustomerName, t.TransactionAmount
FROM Sales.CustomerTransactions t
LEFT JOIN Sales.Customers s ON t.CustomerID = s.CustomerID
WHERE t.TransactionAmount IN (
SELECT TOP 5 TransactionAmount
FROM Sales.CustomerTransactions t
ORDER BY TransactionAmount DESC
)

;WITH TransactionCTE AS (
SELECT TOP 5 CustomerID, TransactionAmount
FROM Sales.CustomerTransactions t
ORDER BY TransactionAmount DESC
)

SELECT s.CustomerID, s.CustomerName, t.TransactionAmount
FROM TransactionCTE t
JOIN Sales.Customers s ON s.CustomerID = t.CustomerID


/*
4. Выберите города (ид и название), в которые были доставлены товары, 
входящие в тройку самых дорогих товаров, а также имя сотрудника, 
который осуществлял упаковку заказов (PackedByPersonID).
*/

TODO: напишите здесь свое решение
SELECT c.CityID, c.CityName, ap.FullName
FROM Sales.Invoices si
join Sales.InvoiceLines sl ON si.InvoiceID = sl.InvoiceID
join Sales.Customers sc ON sc.CustomerID = si.CustomerID
join Application.Cities c ON c.CityID = sc.DeliveryCityID
join Application.People ap ON ap.PersonID = si.PackedByPersonID
WHERE sl.StockItemID IN (
SELECT top 3 StockItemID from [Warehouse].[StockItems] ORDER BY UnitPrice DESC
)
GROUP BY CityID, CityName,FullName


;WITH CTE AS(
SELECT top 3 StockItemID from [Warehouse].[StockItems] ORDER BY UnitPrice DESC
)


SELECT c.CityID, c.CityName, ap.FullName
FROM Sales.Invoices si
join Sales.InvoiceLines sl ON si.InvoiceID = sl.InvoiceID
join Sales.Customers sc ON sc.CustomerID = si.CustomerID
join Application.Cities c ON c.CityID = sc.DeliveryCityID
join Application.People ap ON ap.PersonID = si.PackedByPersonID
join CTE cte ON cte.StockItemID = sl.StockItemID

GROUP BY CityID, CityName,FullName
-- ---------------------------------------------------------------------------
-- Опциональное задание
-- ---------------------------------------------------------------------------
-- Можно двигаться как в сторону улучшения читабельности запроса, 
-- так и в сторону упрощения плана\ускорения. 
-- Сравнить производительность запросов можно через SET STATISTICS IO, TIME ON. 
-- Если знакомы с планами запросов, то используйте их (тогда к решению также приложите планы). 
-- Напишите ваши рассуждения по поводу оптимизации. 

-- 5. Объясните, что делает и оптимизируйте запрос

SELECT 
	Invoices.InvoiceID, 
	Invoices.InvoiceDate,
	(SELECT People.FullName
		FROM Application.People
		WHERE People.PersonID = Invoices.SalespersonPersonID
	) AS SalesPersonName,
	SalesTotals.TotalSumm AS TotalSummByInvoice, 
	(SELECT SUM(OrderLines.PickedQuantity*OrderLines.UnitPrice)
		FROM Sales.OrderLines
		WHERE OrderLines.OrderId = (SELECT Orders.OrderId 
			FROM Sales.Orders
			WHERE Orders.PickingCompletedWhen IS NOT NULL	
				AND Orders.OrderId = Invoices.OrderId)	
	) AS TotalSummForPickedItems
FROM Sales.Invoices 
	JOIN
	(SELECT InvoiceId, SUM(Quantity*UnitPrice) AS TotalSumm
	FROM Sales.InvoiceLines
	GROUP BY InvoiceId
	HAVING SUM(Quantity*UnitPrice) > 27000) AS SalesTotals
		ON Invoices.InvoiceID = SalesTotals.InvoiceID
ORDER BY TotalSumm DESC

-- --

TODO: напишите здесь свое решение
